//
//  ReallySimpleProgress.m
//  ivprototype
//
//  Created by Juan Cruz Ghigliani on 16/3/16.
//  Copyright (c) 2016 Juan Cruz Ghigliani. All rights reserved.
//

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Imports

#import "ReallySimpleProgress.h"

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Types

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Defines & Constants

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Macros

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Private Interface

@interface ReallySimpleProgress ()

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Private Properties

@end


////////////////////////////////////////////////////////////////////////////////
#pragma mark - Implementation

@implementation ReallySimpleProgress

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Setup & Teardown

+(ReallySimpleProgress *)progressWithTitle:(NSString *)title{
    ReallySimpleProgress *progress = [ReallySimpleProgress alertControllerWithTitle:nil
                                                                   message:[NSString stringWithFormat:@"%@\n\n\n",title]
                                                            preferredStyle:UIAlertControllerStyleAlert];
    
    UIActivityIndicatorView *spinner = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
    spinner.center = CGPointMake(130, 65);
    spinner.color = [UIColor blackColor];
    [spinner startAnimating];
    [progress.view addSubview:spinner];
    return progress;
}

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Lifecycle

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Superclass Overrides

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Custom Accessors

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Public methods

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Private methods

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Actions

////////////////////////////////////////////////////////////////////////////////
#pragma mark - Delegate methods


@end
